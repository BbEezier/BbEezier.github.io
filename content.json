{"meta":{"title":"yLTT的Blog","subtitle":null,"description":"Excelsior!","author":"yLTT","url":"http://liangzt.top","root":"/"},"pages":[{"title":"categories","text":"","path":"categories/index.html","date":"07-28","excerpt":""},{"title":"404","text":"","path":"404/index.html","date":"07-28","excerpt":""},{"title":"about","text":"[yEOS from 2050] 与&nbsp; yLTT&nbsp; （ ） 对话中... bot_ui_ini()","path":"about/index.html","date":"12-12","excerpt":""},{"title":"标签页面","text":"还没想好些整点啥呢QAQ","path":"tags/index.html","date":"07-28","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"07-28","excerpt":""},{"title":"","text":"verify_4dda16566618a41dd827368e68ea51be","path":"verification/verification.html","date":"11-15","excerpt":""}],"posts":[{"title":"简单配置使用天猫精灵控制你的ESP8266","text":"简单配置使用天猫精灵控制你的ESP8266!好久不见，我是yLTT。好不容易进入高中阶段的最后一年，马上就能迎接新的生活了吧！ var ap = new APlayer({ element: document.getElementById(\"aplayer-gTmjOKOB\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"義勇忍侠花吹雪\", author: \"田澤茉純 / 嘉山未紗 / 新田ひより\", url: \"http://music.163.com/song/media/outer/url?id=1346608352.mp3\", pic: \"https://p1.music.126.net/ioELm7ZOPlUXYeKcnMjQQg==/109951163869439795.jpg?\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 文章共分成4大块构成 阿里生活物联网平台配置 硬件准备 ESP8266代码 Arduino代码 阿里生活物联网平台配置打开 天猫精灵开放平台 找到 生活物联网平台 选择 直连接入 进入到阿里云生活物联网平台中的 项目管理 界面，我们新建一个项目，名字按自己需求自定义，其余选项保持默认 在产品管理界面中，我们新建一个产品。所属品类最好按你实际功能选择，因为如果瞎选的话，有一些用电器在天猫精灵里面是没有对应的操控方式的，天猫精灵适配的用电器可以在等下进入产品设置界面看到（大不了重新新建一个产品） 这里的连网方式我们要选为蜂窝网，因为如果选择wifi方式会要求你的芯片自行组网，如果你有这个需求可以在网上查询相关教程进行设置。一般个人用户做着玩的项目选蜂窝就足够了。 来到 功能定义 界面，在这里你可以使用 标准功能 或者自己自定义一个功能进行数据的交换，我嫌麻烦这部分就按默认的来了，大家按需选择 下一步我们来到人机交互界面，先把右上角的使用 **公版App控制产品 **勾选好，然后转到天猫精灵选项勾选开启，此时你也能看见 天猫精灵 支持控制的品类了，如果你的产品不在产品类别中那么请重新新建一个产品。 其余的选项，大家自行设置完后记得要保存一下，要不然他会用 **! **来警示你，强迫症看着还是很不爽的 转到 设备调试 界面，我们随便选一个芯片 然后我们 新增测试设备 ,DeviceName你自己自定义，新建过后他会有三个数据（ProductKey、DeviceName、DeviceSecret）给你，最好拿txt文件保存一下方便等一下操作 至此，生活物联网平台 的设置暂时告一段落 硬件准备 首先，你得先有一个天猫精灵是吧~ 这是我的nodemcu开发板 这是我的Arduino UNO和一个测试用的RGB模块 简单的接线图 ESP8266代码首先要确保你的Arduino IDE有 AliyunIoTSDK 这个库，按照他的说明把依赖项安装好。 感谢芋头大佬，让ESP8266连上阿里云变得更加方便迅速 ESP8266离线包 123456789101112131415161718192021222324252627282930313233343536373839// 引入 wifi 模块，并实例化，不同的芯片这里的依赖可能不同#include &lt;ESP8266WiFi.h&gt;static WiFiClient espClient;// 引入阿里云 IoT SDK#include &lt;AliyunIoTSDK.h&gt;// 设置产品和设备的信息，从阿里云设备信息里查看#define PRODUCT_KEY &quot;a1aOFU668aC&quot; //产品ID#define DEVICE_NAME &quot;FKRGB&quot; //设备名#define DEVICE_SECRET &quot;************&quot; //设备key#define REGION_ID &quot;cn-shanghai&quot;// 设置 wifi 信息#define WIFI_SSID &quot;ESP8266&quot; #define WIFI_PASSWD &quot;IOT666666&quot;void setup()&#123; Serial.begin(115200); // 初始化 wifi wifiInit(WIFI_SSID, WIFI_PASSWD); // 初始化 iot，需传入 wifi 的 client，和设备产品信息 AliyunIoTSDK::begin(espClient, PRODUCT_KEY, DEVICE_NAME, DEVICE_SECRET, REGION_ID); &#125;void loop()&#123; AliyunIoTSDK::loop();&#125;// 初始化 wifi 连接void wifiInit(const char *ssid, const char *passphrase)&#123; WiFi.mode(WIFI_STA); WiFi.begin(ssid, passphrase); while (WiFi.status() != WL_CONNECTED) &#123; delay(1000); Serial.println(&quot;WiFi not Connect&quot;); &#125; Serial.println(&quot;Connected to AP&quot;);&#125; 请用刚才你保存好的3个数据，替换上面的定义，还有wifi的设置也请你自行替换 烧录过后，应该就能看到你的设备已经在线了 这时我们先暂时回到 生活物联网平台 中的 批量投产 页面 点开配网 + App下载二维码 把你的Device Name填好生成二维码 确定好你的Esp8266已经连接好阿里云后，在手机上搜索应用商店下载 云智能 APP 点开右上角的扫码功能，扫这个二维码 这是我配网成功的界面，我们现在打开Arduino IDE的串口功能，查看我们在App下达的指令 ESP8266 能否收到 欧耶！成功了！ 这时我们可以对代码进行进一步的修改 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364// 引入 wifi 模块，并实例化，不同的芯片这里的依赖可能不同#include &lt;ESP8266WiFi.h&gt;static WiFiClient espClient;// 引入阿里云 IoT SDK#include &lt;AliyunIoTSDK.h&gt;#include&lt;SoftwareSerial.h&gt;SoftwareSerial mySerial(4,5); //D2，D1脚分别为rx，tx// 设置产品和设备的信息，从阿里云设备信息里查看#define PRODUCT_KEY &quot;a1aOFU668aC&quot; //产品ID#define DEVICE_NAME &quot;FKRGB&quot; //设备名#define DEVICE_SECRET &quot;***************&quot; //设备key#define REGION_ID &quot;cn-shanghai&quot;// 设置 wifi 信息#define WIFI_SSID &quot;ESP8266&quot; #define WIFI_PASSWD &quot;IOT666666&quot;int Red,Blue,Green;String RGBvalue;void setup()&#123; // set the digital pin as output: mySerial.begin(9600); Serial.begin(115200); // 初始化 wifi wifiInit(WIFI_SSID, WIFI_PASSWD); // 初始化 iot，需传入 wifi 的 client，和设备产品信息 AliyunIoTSDK::begin(espClient, PRODUCT_KEY, DEVICE_NAME, DEVICE_SECRET, REGION_ID); // 绑定一个设备属性回调，当远程修改此属性，会触发 SetRGBColorCallback // RGBColor 是在设备产品中定义的功能标识符 AliyunIoTSDK::bindData(&quot;RGBColor&quot;,SetRGBColorCallback);&#125;void loop()&#123; AliyunIoTSDK::loop();&#125;// 初始化 wifi 连接void wifiInit(const char *ssid, const char *passphrase)&#123; WiFi.mode(WIFI_STA); WiFi.begin(ssid, passphrase); while (WiFi.status() != WL_CONNECTED) &#123; delay(1000); Serial.println(&quot;WiFi not Connect&quot;); &#125; Serial.println(&quot;Connected to AP&quot;);&#125;// RGBColor状态修改的回调函数void SetRGBColorCallback(JsonVariant p)&#123; Red = p[&quot;RGBColor&quot;][&quot;Red&quot;]; Green = p[&quot;RGBColor&quot;][&quot;Green&quot;]; Blue = p[&quot;RGBColor&quot;][&quot;Blue&quot;]; RGBvalue += Red; RGBvalue += &#x27;,&#x27;; RGBvalue += Green; RGBvalue += &#x27;,&#x27;; RGBvalue += Blue; mySerial.print(RGBvalue); Serial.print(RGBvalue); RGBvalue = &quot;&quot;;&#125; 看注释就知道函数大概的用途，如果对上面函数有不了解的建议去看 AliyunIotSdk 的技术文档 然后我们回到 云智能App 来到这个页面点开 更多服务 找到天猫精灵，绑定你自己天猫精灵的账号 绑定成功后，打开天猫精灵看看 欧耶！连接上天猫精灵啦！ 用天猫精灵控制esp8266就很简单了，我们直接呢，在场景这个选项当中，新建一个自定义智能场景即可 然后你只需要对天猫精灵喊命令，就会按你的设置执行功能了 Arduino代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970#include&lt;SoftwareSerial.h&gt;SoftwareSerial mySerial(2,3); //2，3脚分别为rx，tx#define Rpin 9#define Gpin 10#define Bpin 11String ReadData;int RGBvalue[]=&#123;0,0,0&#125;;int tod;int i = 0;void setup()&#123; Serial.begin(115200); mySerial.begin(9600); pinMode(Rpin,OUTPUT); pinMode(Gpin,OUTPUT); pinMode(Bpin,OUTPUT);&#125;void loop()&#123; SerialListen(); goRGBwithArray(RGBvalue); i = 0; ReadData = &quot;&quot;;&#125;void SerialListen()&#123; while(mySerial.available()) &#123; ReadData += char(mySerial.read()); delay(2); &#125; Serial.print(ReadData); do&#123; tod = ReadData.indexOf(&#x27;,&#x27;);//找到字符串中逗号出现的位置 if(tod != -1) &#123; String str;//我们先创建一个String str = ReadData.substring(0,tod);//用来保存逗号前面的数据 RGBvalue[i] = str.toInt();//将上面的保存好的String数据转换成Int类型保存到RGBvalue中 ReadData = ReadData.substring(tod + 1,ReadData.length()); i++;//进入下一次循环 // Serial.println(message); &#125; else&#123; if(ReadData.length()&gt;0)&#123; RGBvalue[2] = ReadData.toInt(); &#125; &#125; &#125;while(tod&gt;=0); &#125;void goRGB(int Rval,int Gval,int Bval)&#123; analogWrite(Rpin,Rval); analogWrite(Gpin,Gval);//因为我手头这个RGB灯带是共阴的，所以不需要用255去减，如果是共阴的RGB灯带要用255减去这个值 analogWrite(Bpin,Bval); &#125;void goRGBwithArray(int RGBval[])&#123; analogWrite(Rpin,RGBval[0]); analogWrite(Gpin,RGBval[1]); analogWrite(Bpin,RGBval[2]); &#125;void bln(int pin,int val)&#123; //简单呼吸灯函数 for(int i=0;i&lt;val ; i++)&#123; analogWrite(pin,i); delay(2); &#125; delay(1000); for(int i=255;i&gt;0 ; i--)&#123; analogWrite(pin,i); delay(2); &#125; &#125; 这里的代码可以不用照抄，大家可以按自己需求写自己的下位机代码，我这里主要是提供一个思路 总结比较容易上手的实用小项目，适合喜欢动手的小伙伴来体验物联网这一概念！ 最后,Excelsior!","path":"2021/09/14/简单配置使用天猫精灵控制你的ESP8266/","date":"09-14","excerpt":"","tags":[]},{"title":"Hexo + Coding/Github静态博客部署教程 2021版","text":"Hexo + Coding/Github 静态博客部署教程本篇文章内容由本人实践后亲测有效，遇到奇奇怪怪的BUG建议熟练使用百度等搜索引擎，如若无果在尝试联系本人=v= var ap = new APlayer({ element: document.getElementById(\"aplayer-hrhHNCkv\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"sweets parade\", author: \"花澤香菜\", url: \"http://music.163.com/song/media/outer/url?id=809268.mp3\", pic: \"https://p1.music.126.net/soVzasgTYU36F1uAirKEhQ==/109951165628137310.jpg?\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 文章共分成4大块构成 前言 前期准备工作 网页配置 个性化域名设置 前言​ 这个博客之前是直接托管给Github pages进行架设的，Github的速度大家都懂的，没有撑杆简直可以说是龟速，而我又给这个博客放置了太多二次元图片，导致本就不快的网页加载的更加慢了QAQ (PS:原先打算是使用Gitee pages托管，但是不知道为什么现在Gitee pages暂停了服务) 经过检索，决定使用Coding的静态网页托管服务，Coding的节点在中国香港，比起Github的荷兰节点肯定是快上不少。于是折腾了一个上午，把博客的架设全面迁移到了Coding上。 Github和Coding的构建方式其实大同小异，不过要留意的是，Coding虽然是免费的,但他所使用的CDN加速服务是腾讯云的，这一点很蛋疼，我才刚构建不到2个小时给我扣了0.04元(钱虽然少，但积少成多就不可忽视了)而Github的服务则就是完全免费开源的了，大家按需选择 前期准备工作 安装Git 安装Node.js 注册Coding/Github账号 获取ssh公钥 安装Hexo 查阅Hexo官方文档进行1-2步的配置 文档 | Hexo 如何获取ssh公钥对着文件夹空白处右键，选择 Git Bash Here 打开git界面 紧接着，先配置用户名,然后在配置自己的邮箱 (PS:如果你想要双线部署的话Coding和Github的邮箱以及用户名都设置一样会方便很多，但是密钥是可以多个生成的，按需选择吧~) git config --global user.name \"xxx\"(注册网站的用户名) git config --global user.email \"xxx@xx.com\"(注册网站的邮箱,别忘记了双引号哦) 然后继续，在git界面键入 ssh-keygen -t rsa -C xxx@xx.com 过后他会弹出几个询问是否设置密码的提示，为了避免麻烦，建议不用设置，直接回车。 这样就算建立成功了 你可以在刚才的文件夹中发现两个新的文件 然后打开到你刚注册好的网站的页面(英文的那个是Github,中文的是Coding) 找到SSH公钥设置&gt;新增公钥 右键，用笔记本来打开id_rsa.pub文件，并且将里面的内容从头到脚复制一遍，黏贴到网页中的公钥内容中，标题随便设置，Coding记得勾选永久有效，然后点击确定 完成后回到 git界面，输入 ssh -T git@github.com 或者 ssh -T git@coding.net 来测试SSH连接 询问是否连接，输入yes 重新键入测试 如图，即为正确连接 安装Hexo右键电脑桌面计算机&gt;属性&gt;高级系统属性&gt;环境变量 选中Path，打开编辑 将node.js、npm、git都加入进环境变量中 （PS:如果不清楚怎么找到它们的地址，请活用百度等搜索引擎上网查询） 依旧是打开我们熟悉的git cnpm install -g hexo-cli 或者 yarn add -g hexo-cli 出现报错的情况，请查看我上一篇文章《关于Gal主题的一些使用心得》有写Cnpm和Yarn的下载方式 安装结束后，找到一个合适的文件夹，用作你的博客根目录 在空白处右击鼠标，打开Git界面 键入 hexo init 我的根目录就是在一个名为blog的文件夹中 完毕后直接 hexo g (或者输入hexo generate) hexo s (或者输入hexo server) 出现如图指令即为成功建立本地端网站，你可以打开 http://localhost:4000 来浏览它 网页配置Github首先我们要新建一个仓库，仓库名必须是你的 用户名.github.io 格式如图 我这里报错是因为已经建立过了 Coding这边一样，不过只需要仓库名称是用户名就好了，两个网站都一样勾选生成README文件 其中Coding要记得勾选公开仓库，要不然别人是进不了你的网页的 创建仓库完毕后，将你仓库的ssh链接Clone一下 然后打开博客根目录的_config.yml文件，直接拉到最下面 如图修改 deploy: type: git repo: 这里复制黏贴上你刚才Clone下来的链接 branch: main 这里的main还是master取决于你仓库的根目录叫什么，一般来说Github的是main而Coding的就是master 注意一下冒号后面有一个空格，请别忘记输入 修改完后我们还可以根据Hexo官网的配置手册进行对照配置_config.yml文件 如图，这是我自己的配置 准备完成后，对着你的根目录，也就是_config.yml所在的文件夹右键打开git 依次输入 hexo clean hexo g hexo d **（注意：每次修改根目录的文件后都需要重新进行以上3个步骤(比如发布文章之类的) ** ##Coding除了要重新上传到库之后还要手动到网页托管界面重新部署，这一点也比较麻烦） 一般的，如果你运行完以上代码后，出现和我差不多一样的界面，恭喜你，你成功的架设了属于自己的博客(此处仅限Github用户)可以通过 xxxx（你的用户名）.github.io 进入你的博客查看 Coding用户不要着急，你们还有几个步骤呢 让我们回到浏览器，找到网页托管选项 这里建议跟着官方的流程走一遍，因为这一块我以前用腾讯云的时候已经注册过一次了 网站托管服务 - CODING 帮助中心 成功进入配置后，按照我的格式来进行网页配置 注意这里网站类型要选择静态网站，选择Hexo会报错 然后确定后开始创建即可，网站建立完成后，右上角可以选择进入访问，上面的链接你可以直接复制黏贴出去。 个性化域名设置首先你需要拥有一个自己的域名，这里我只推荐通过阿里云万网购买，因为我只在这里试过，如果你自己有其他更好的选择，按需即可 关于域名购买的方法，网上有很多全面的教程，这里就不细说了 回到博客根目录下\\source，新建一个CNAME文件(无后缀注意)使用笔记本打开他，在里面输入你自己的域名，比如我就输入 liangzt.top ，前面不用加任何的东西。然后保存即可 然后重新 clean g s老三样一下 这个时候，进入你的阿里云域名管理系统，点击解析 添加记录 照着我这个格式设置就好了，记录值就是你刚才拿到的(xxx.github.io)，一个主机记录是www的一个是@的 如果你的主机记录选择 www ，就可以通过 www.liangzt.top 进行网站访问了，如果只想输入 liangzt.top 来访问网站，那只需要选择@做主机记录即可，我这里两个都进行了设置。Coding用户，直接在网页托管界面有一个自定义域名，把自己域名填进去就可以了，记得把强制https给勾选上。 Github用户开启强制https的方法 打开仓库设置，找到pages，将最下面的选项给勾选上（一般来说颁发SSL大概要24小时，所以这个时间段应该还勾选不了，明天记得勾选就好了） 总结因为这个教程大多数是靠我自己看别人的教程琢磨出来的，可能有些地方讲的不太清楚请多见谅，可以去搜索别的Hexo建站教程补充一下，我写这个 一是为了记录下自己建站的一个经历，二就是因为实在没想好要更新什么文章，索性直接把自己这3天的踩过的一些坑排除掉写一份相对比较简单易懂的建站教学，从头到尾甚至不需要你懂代码就可以完成。 希望这个教程能够帮助有需要的人，也希望自己能保持更新博客的好习惯，时刻分析自己所做的以及应该去做的事情，明确目标。 最后,Excelsior! 宫子真可爱嘻嘻","path":"2021/07/30/Hexo-Coding-Github静态博客部署教程-2021版/","date":"07-30","excerpt":"","tags":[]},{"title":"关于Gal主题的一些使用心得","text":"var ap = new APlayer({ element: document.getElementById(\"aplayer-mfZkzEJh\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"メビウス!\", author: \"佐橋俊彦\", url: \"http://music.163.com/song/media/outer/url?id=408772686.mp3\", pic: \"https://p1.music.126.net/eLR9mBbd2W55p3Utz6oinQ==/1401877329221968.jpg?\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); PS：开始前不来点音乐吗XD 针对Hexo Theme Gal 在git以下内容时报错的解决方案 npm install hexo-renderer-sass --save npm install hexo-renderer-scss --save 1.下载Yarn2 - 安装 | Yarn - JavaScript 软件包管理器 | Yarn 中文文档 - Yarn 中文网 (yarnpkg.cn) 按照文档描述下载安装好后可以重新安装 yarn add hexo-renderer-sass yarn add hexo-renderer-scss 2.改用淘宝镜像 cnpm下载npm install -g cnpm --registry=https://registry.npm.taobao.org npm config set registry https://registry.npm.taobao.org cnpm install hexo-renderer-sass --save 如果在git拉取时报错OpenSSL SSL_read: Connection was reset, errno 10054将ssl验证关闭即可，然后重新拉取 git config --global http.sslVerify \"false Gal 主题色更改方式在你的Hexo博客根目录下\\themes\\gal\\source\\css中找到_variables.scss文件 颜色对应关系的话其实直接对比页面与scss文件里面RGB代码就能看出来，建议开着F12对照。 代码高亮设置Gal主题里面引用了highlight.js 最简单的应用方式就好像我上面的示例 直接按如下格式输入即可 代码内容 如下 12345678910111213import randomyLTT = &quot;BEzier&quot;print(yLTT)random_num = random.randint(1,1000)for i in range(3): num = int(input(&#x27;请输入你猜的数字：&#x27;)) if num&gt;random_num: print(&#x27;你猜的太大了&#x27;) elif num&lt;random_num: print(&#x27;太小了&#x27;) else: print(&#x27;恭喜你猜对了，答案是：&#x27;,random_num) break 我个人觉得Md文件编辑用 Typora 会方便一点，代码块高亮可以直接导入不用按格式输入 加载图片避坑这里可以直接照着这位大佬的方法走就可以了: HEXO插入图片（详细版） - 简书 (jianshu.com) 一般的，按照上面的流程走完后可以直接通过 ![图片名](图片.jpg) 在文章中进行一个图片的展示 这里的文章就是指你_post文件夹下的文件，也就是你在git中通过 hexo new xxx 新建的文件，但如果你拿这个方法在页面中使用，就没效果了 hexo new page xxx 新建页面 如果你想要在页面（比如“关于我” about页面）中添加图片，直接使用Html的语法就可以了~(当然文章也可以使用这个方法) &ltimg src=\"/image/xxx.png\" /&gt 这里我是直接在我的Hexo根目录的\\source文件夹下面新建了一个image文件夹,然后把需要展示的图片放进去，调用起来也很方便。 自己的碎碎念开博客是为了更好的记录自己学习的历程，目前网站是直接托管给Github page服务的，或许未来有钱了架设一个服务器也是不错的选择~(º﹃º ) 话说原来暑假已经过去一个月了吗？？？！","path":"2021/07/29/关于Gal主题的一些使用心得-0/","date":"07-29","excerpt":"","tags":[]}],"categories":[],"tags":[]}